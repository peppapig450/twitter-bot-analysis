[project]
name = "twitter-bot-analysis"
version = "0.1.0"
description = "A modern Python tool for analyzing Twitter account activity."
authors = [
    {name = "peppapig450",email = "peppapig450@pm.me"}
]
readme = "README.md"
requires-python = ">=3.12,<4.0"
dependencies = [
    "pandas[performance] (>=2.2.3,<3.0.0)",
    "scikit-learn (>=1.6.1,<2.0.0)",
    "seaborn (>=0.13.2,<0.14.0)",
    "networkx (>=3.4.2,<4.0.0)",
    "vadersentiment (>=3.3.2,<4.0.0)",
    "tabulate (>=0.9.0,<0.10.0)",
    "matplotlib (>=3.10.1,<4.0.0)",
    "pydantic (>=2.10.6,<3.0.0)",
    "python-dotenv (>=1.0.1,<2.0.0)",
    "spacy (>=3.8.4,<4.0.0); python_version >= '3.12' and python_version < '3.13'",
    "en-core-web-sm @ https://github.com/explosion/spacy-models/releases/download/en_core_web_sm-3.8.0/en_core_web_sm-3.8.0-py3-none-any.whl",
    "tweepy (>=4.15.0,<5.0.0)",
    "wordcloud (>=1.9.4,<2.0.0)"
]

[tool.poetry]
package-mode = false


[tool.poetry.group.dev.dependencies]
types-seaborn = "^0.13.2.20250111"
pandas-stubs = "^2.2.3.241126"
types-tabulate = "^0.9.0.20241207"
types-networkx = "^3.4.2.20250227"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".ipynb_checkpoints",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pyenv",
  ".pytest_cache",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  ".vscode",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "site-packages",
  "venv",
]

# Same as Black
indent-width = 4
line-length = 108

# Assume Python 3.12
target-version = "py312"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
ignore = [
  #### modules
  "ANN", # flake8-annotations
  "COM", # flake8-commas
  "C90", # mccabe complexity
  "DJ", # django
  "EXE", # flake8-executable
  "T10", # debugger
  "TID", # flake8-tidy-imports
  #### specific rules
  "D100", # ignore missing docs
  "D101",
  "D102",
  "D103",
  "D104",
  "D105",
  "D106",
  "D107",
  "D200",
  "D205",
  "D212",
  "D400",
  "D401",
  "D415",
  "E402", # false positives for local imports
  "E501", # line too long
  "TRY003", # external messages in exceptions are too verbose
  "TD002",
  "TD003",
  "FIX002", # too verbose descriptions of todos
]
select = [
  "ALL",
]

fixable = ["ALL"]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]

# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.mypy]
check_untyped_defs = true # Check untyped function bodies
disallow_any_generics = false # Allow generic types (useful for pandas/numpy)
follow_imports = "normal" # Default, but explicit for clarity
ignore_missing_imports = false # Disable to enforce stubs, with exceptions below
python_version = "3.12" 
strict = true 
warn_no_return = true # Ensure all paths return a value
warn_unused_configs = true # Catch unused settings
warn_unused_ignores = true # Highlight unnecessary # type: ignore